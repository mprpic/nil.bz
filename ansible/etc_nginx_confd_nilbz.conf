server {
    listen      443 ssl;
    server_name nil.bz;
    charset     utf-8;
    client_max_body_size 15M;

    # Certificates from Let's Encrypt
    ssl_certificate      /etc/letsencrypt/live/nil.bz/fullchain.pem;
    ssl_certificate_key  /etc/letsencrypt/live/nil.bz/privkey.pem;
    ssl_session_timeout 1d;
    ssl_session_cache shared:SSL:50m;
    ssl_session_tickets off;

    # Diffie-Hellman parameter for DHE ciphersuites
    ssl_dhparam /etc/ssl/dhparams.pem;

    # In with the new, out with the old
    ssl_protocols TLSv1.3;
    ssl_prefer_server_ciphers off;

    # Disable returning Nginx version
    server_tokens off;

    # Enable gzip compression
    gzip on;
    gzip_vary on;
    gzip_proxied any;
    gzip_comp_level 6;
    gzip_min_length 256;
    gzip_types text/plain text/css application/json application/x-javascript text/xml application/xml application/xml+rss text/javascript application/javascript application/vnd.ms-fontobject application/x-font-ttf font/opentype image/svg+xml image/x-icon;

    # HSTS (ngx_http_headers_module is required) (15768000 seconds = 6 months)
    add_header Strict-Transport-Security max-age=15768000;

    # Additional headers must be defined on the same level
    add_header X-Frame-Options SAMEORIGIN;
    add_header X-Content-Type-Options nosniff;
    add_header X-XSS-Protection "1; mode=block";

    # OCSP Stapling - fetch OCSP records from URL in ssl_certificate and cache them
    ssl_stapling on;
    ssl_stapling_verify on;

    # Whitelist chosen HTTP methods
    if ( $request_method !~ ^(GET|POST|HEAD)$ ) {
        return 405;
    }

########## ROUTING ###########

    root /var/www/html/;

    error_page 404 /404.html;
    location /404.html {
        internal;
    }

    error_page 500 /500.html;
    location /500.html {
        internal;
    }

    location /temp {
        autoindex on;
        alias /var/www/temp;
    }

    location / {
        if ($request_uri ~ ^/(.*)\.html$) {
           return 302 /$1;
        }
        try_files $uri $uri/home.html $uri.html $uri/ =404;
    }
}

########## HTTP REDIRECT ###########

server {
    listen       80;
    server_name  nil.bz;

    location / {
        return 301 https://$server_name$request_uri;
    }
}
